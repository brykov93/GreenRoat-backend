import urllib.request
import json

class Weather():
    def __init__(self,ApiKey,latitude,longitude):
        self.ApiKey=ApiKey
        self.latitude=latitude
        self.longitude=longitude

    def getWeather(self):
        '''
        Получаем погоду по api
        Входные параметры:
           key (секретный личный ключ)
           latitude (Широта местоположения (в десятичных градусах). Положительный - север, отрицательный - юг.)
           longitude (Долгота местоположения (в десятичных градусах). Положительный - восток, отрицательный - запад.)
        Выходные параметры:
           latitude (Запрошенная широта)
           longitude (Запрошенная долгота)
           timezone (Название часового пояса для запрошенного местоположения. Это используется для текстовых сводок и для определения, когда начинаются ежечасные и ежедневные объекты блока данных.)
           offset (Текущее смещение часового пояса в часах. (Использование этого свойства почти наверняка приведет к ошибкам перехода на летнее время.) 
           hourly (Блок данных, содержащий почасовые погодные условия на следующие два дня.)
              time (Время UNIX, когда начинается эта точка данных. Точечные данные всегда выровнены по верху минуты, ежечасные объекты данных - по верху часа, а ежедневные объекты - до полуночи дня, все в соответствии с местным часовым поясом)
              summary (Удобное для чтения текстовое описание этой точки данных. (Это свойство имеет миллионы возможных значений, поэтому не используйте его в автоматических целях: используйте вместо этого свойство icon!))
              icon (Считываемая компьютером текстовая сводка этой точки данных, подходящая для выбора значка для отображения. Если определено, это свойство будет иметь одно из следующих значений: ясный день, ясная ночь, дождь, снег, дождь со снегом, ветер, туман, облачно, частично облачно днем или частично облачно ночью. (Разработчики должны убедиться, что определено разумное значение по умолчанию, поскольку в будущем могут быть определены дополнительные значения, такие как град, гроза или торнадо.))
              precipIntensity (Интенсивность осадков, выпадающих в данное время. Это значение зависит от вероятности (то есть, при условии, что выпадет любое количество осадков).)
              precipProbability (Вероятность выпадения осадков от 0 до 1 включительно)
              precipType (Тип осадков, происходящих в данный момент. Если определено, это свойство будет иметь одно из следующих значений: «дождь», «снег» или «мокрый снег» (что относится к каждому из замерзающего дождя, ледяных гранул и «зимней смеси»). (Если значение параметра временной задержки равно нулю, то это свойство не будет определено.)
              temperature (Температура воздуха)
              apparentTemperature (Ощущаемая температура)
              dewPoint (Точка росы)
              humidity (Относительная влажность от 0 до 1 включительно.)
              pressure (Давление воздуха на уровне моря в гектопаскалях)
              windSpeed (Скорость ветра в метрах в секунду)
              windGust (Скорость порыва ветра в метрах в секунду )
              windBearing (Направление ветра в градусах, истинный север равен 0 ° и развивается по часовой стрелке. (Если windSpeed ​​равен нулю, это значение не будет определено.))
              cloudCover (Процент неба, перекрытого облаками, от 0 до 1 включительно.)
              uvIndex (УФ индекс)
              visibility (Средняя видимость в километрах)
              ozone (Столбчатая плотность общего атмосферного озона в данный момент в единицах Добсона.)
        '''

        baseUrl='https://api.darksky.net/forecast/'
        response = urllib.request.urlopen(baseUrl+self.ApiKey+'/'+str(self.latitude)+','+str(self.longitude)
                                          +'?exclude=currently,minutely,daily,flags?lang=ru&units=si')
        string = response.read().decode('utf-8')
        jsonObj = json.loads(string)
        return jsonObj
        
